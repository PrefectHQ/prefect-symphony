definitions:
  Error:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    type: object
  PodCertificate:
    properties:
      certificate:
        description: Certificate in PEM format
        type: string
    type: object
  Token:
    properties:
      authorizationToken:
        description: 'Short lived access token built from a user session. It can be
          used for the same purposes as the sessionToken

          and it should be passed as an header named "Authorization". At least either
          one of SessionToken or

          Authorization header must me provided on subsequent API calls.

          '
        type: string
      name:
        description: 'The name of the header in which the token should be presented
          on subsequent API calls.

          '
        type: string
      token:
        description: 'Token that can be passed as header, it can be considered a refresh
          token along with the

          idm/tokens ("authorizationToken").

          This should be considered opaque data by the client. It is not intended
          to contain any data interpretable by the

          client. The format is secret and subject to change without notice.

          '
        type: string
    type: object
info:
  description: 'For bots and other on-premise processes to authenticate. Once

    authenticated, the bot will be able to use the methods described in

    serviceAPI.yaml and agentAPI.yaml.


    Connections to the servers will be over

    client authenticated TLS, the servers for this API will perform the

    authentication by inspecting the certificate presented by the

    SSLSocketClient.


    There will be two implementations of this API, one on your Pod

    and one on the Key Manager. In order to fully authenticate,

    an API client will have to call both of these implementations

    and pass both of the session tokens returned as headers in all

    subsequent requests to the Symphony API.

    '
  title: Authenticator API
  version: 20.14.1
paths:
  /v1/app/pod/certificate:
    get:
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PodCertificate'
        '401':
          description: Client is unauthorized to access this resource
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server error, see response body for further details.
          schema:
            $ref: '#/definitions/Error'
      summary: 'Retrieve the certificate that can be use to validate the JWT token
        obtain

        through the extension application authentication flow.

        '
      tags:
      - CertificatePod
  /v1/authenticate:
    post:
      description: 'Based on the SSL client certificate presented by the TLS layer,
        authenticate

        the API caller and return a session token.

        '
      produces:
      - application/json
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/Token'
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Certificate authentication is not allowed for the
            requested user.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server error, see response body for further details.
          schema:
            $ref: '#/definitions/Error'
      summary: Authenticate.
      tags:
      - CertificateAuthentication
  /v1/logout:
    post:
      description: 'Logout a users session.

        '
      parameters:
      - description: the session token to logout.
        in: header
        name: sessionToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/Token'
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Certificate authentication is not allowed for the
            requested user.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server error, see response body for further details.
          schema:
            $ref: '#/definitions/Error'
      summary: Logout.
      tags:
      - CertificateAuthentication
swagger: '2.0'
