# generated by datamodel-codegen:
#   filename:  stream.yaml
#   timestamp: 2022-09-07T03:04:02+00:00

from __future__ import annotations

from typing import Optional

from pydantic import Extra, BaseModel, Field


class ShareArticle(BaseModel):
    """
    See source code for the fields' description.
    """
    class Config:
        extra = Extra.allow
        allow_mutation = False

    app_icon_url: Optional[str] = Field(
        None, alias='appIconUrl', description='App icon url of the calling application'
    )
    app_id: str = Field(
        ..., alias='appId', description='App ID of the calling application'
    )
    app_name: Optional[str] = Field(
        None, alias='appName', description='App name of the calling application'
    )
    article_id: Optional[str] = Field(
        None,
        alias='articleId',
        description=(
            'An ID for this article that should be unique to the calling application.'
            ' \nEither an articleId or an articleUrl is required.\n'
        ),
    )
    article_url: Optional[str] = Field(
        None, alias='articleUrl', description='Url to the article'
    )
    author: str = Field(..., description='Author of the article')
    message: Optional[str] = Field(
        None,
        description='The message text that can be send along with the shared article',
    )
    publish_date: Optional[int] = Field(
        None, alias='publishDate', description='Article publish date in unix timestamp'
    )
    publisher: str = Field(..., description='Publisher of the article')
    sub_title: Optional[str] = Field(
        None, alias='subTitle', description='The subtitle of the article'
    )
    summary: Optional[str] = Field(None, description='Preview summary of the article')
    thumbnail_url: Optional[str] = Field(
        None, alias='thumbnailUrl', description='Url to the thumbnail image'
    )
    title: str = Field(..., description='The title of the article')
