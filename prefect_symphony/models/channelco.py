# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-08-26T18:52:01+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-08-26T18:52:35+00:00



from typing import Optional

from pydantic import BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-08-26T18:53:43+00:00



from typing import Optional

from pydantic import BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-08-26T18:54:42+00:00



from typing import Optional

from pydantic import BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-08-26T18:55:02+00:00



from typing import Optional

from pydantic import BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
# generated by datamodel-codegen:
#   filename:  channelco.yaml
#   timestamp: 2022-09-07T03:04:04+00:00



from typing import Optional

from pydantic import Extra, BaseModel, EmailStr, Field


class ChannelCoUserRequest(BaseModel):
    """
    See source code for the fields' description.
    
    payload to onboard a channelco user account
    """

    class Config:
        extra = Extra.allow
        allow_mutation = False

    department: Optional[str] = Field(
        None, example='Product Engineering', max_length=256
    )
    display_name: Optional[str] = Field(
        None,
        alias='displayName',
        description=(
            'if omitted, it will be generated with the pattern <firstName lastName>'
        ),
        example='Paul Smith',
        max_length=128,
    )
    email: EmailStr = Field(..., example='foo@example.com')
    first_name: str = Field(..., alias='firstName', example='Paul', max_length=64)
    last_name: str = Field(..., alias='lastName', example='Smith', max_length=64)
    location: Optional[str] = Field(None, description='country')
    phone_number: Optional[str] = Field(None, alias='phoneNumber', example=33612345678)
    title: Optional[str] = Field(None, example='Engineering manager', max_length=256)
